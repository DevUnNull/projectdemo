file: web.xml neu can
<welcome-file-list>
       <welcome-file>login.jsp</welcome-file>
</welcome-file-list>

@WebServlet(name="LoginController",  urlPatterns = "LoginController")
<%@taglib prefix="c"  uri="http://java.sun.com/jsp/jstl/core"%>
// maincontroller
 else if("Login".equals(action)){
                url = "LoginController";
            }else if("Logout".equals(action)){
                url = "LogoutController";
            }else if("Search".equals(action)){
                url = "SearchController";
            }


// LoginServlet 
   private static final String ERROR = "login.jsp";
    private static final String SUCCESS = "currencyExchangeRate.html";
protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        String url = ERROR;
        try {
            String username = request.getParameter("username");
            String password = request.getParameter("password");
            DAO dao = new DAO();
            UserDTO user = dao.login(username, password);
            if(user != null) {
                HttpSession session = request.getSession();
                session.setAttribute("LOGIN_USER", user);
                url = SUCCESS;
            } else {
                request.setAttribute("MESSAGE", "Incorrect UserID or Password");
            }
        } catch(Exception e) {
            log("Error at LoginController: " + e.toString());
        } finally {
            request.getRequestDispatcher(url).forward(request, response);
        }
    }

//login.jspp

        <h1 style="color: red">${requestScope.MESSAGE}</h1>
        <form action="MainController" method="POST">
            Username:<input type="text" name="username"><br>
            Password:<input type="password" name="password"><br>
            <input type="submit" name="action" value="Login">
        </form>


//logout servlet
    private static final String ERROR = "login.jsp";
    private static final String SUCCESS = "login.jsp";

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        String url = ERROR;
        try {
            HttpSession session = request.getSession(false);
            if (session != null) {
                session.invalidate();
                url = SUCCESS;
            }
        } catch (Exception e) {
            log("Error at LogoutController: " + e.toString());
        } finally {
            response.sendRedirect(url);
        }
    }

// DAO for login
public class DAO {
     public UserDTO login(String username, String password) throws SQLException {
        UserDTO user = null;
        Connection conn = null;
        PreparedStatement ptm = null;
        ResultSet rs = null;
        try {
            conn = DBUtils.getConnection();
            if (conn != null) {
                ptm = conn.prepareStatement("SELECT * FROM tblUser WHERE username = ? AND password = ?");
                ptm.setString(1, username);
                ptm.setString(2, password);
                rs = ptm.executeQuery();
                if (rs.next()) {
                    String name = rs.getString("name");
                    user = new UserDTO(username, name, password);
                }
            }
        } catch (Exception e) {
            e.getStackTrace();
        } finally {
            if (rs != null) {
                rs.close();
            }
            if (ptm != null) {
                ptm.close();
            }
            if (conn != null) {
                conn.close();
            }
        }
        return user;
}
}

// DAO DAOALL FOR LIST SEARCH AND DELETE voi  bien SEARCH  vaf DELETE la cai sql 
NOTE:private static final String LOGIN = "SELECT fullName, roleID FROM tblUsers WHERE userID = ? AND [password] = ?";
    private static final String SEARCH = "SELECT [id], [name], [description], [price], [dimensions], [material], [status] FROM tblFurniture WHERE [name] LIKE ?";
    private static final String DELETE = "UPDATE tblFurniture SET [status] = 0 WHERE id = ?";
//DELETE FROM table_name WHERE condition;
/////////////

      public List<ProductDTO> getListProduct(String search) throws SQLException {
        List<ProductDTO> list = new ArrayList<>();
        Connection conn = null;
        PreparedStatement ptm = null;
        ResultSet rs = null;

        try {
            conn = DBUtils.getConnection();
            if (conn != null) {
                ptm = conn.prepareStatement(SEARCH);
                ptm.setString(1, "%" + search + "%");
                rs = ptm.executeQuery();
                while (rs.next()) {
                    String id = rs.getString("id");
                    String name = rs.getString("name");
                    String description = rs.getString("description");
                    String size = rs.getString("size");
                    double price = Double.parseDouble(rs.getString("price"));
                    boolean status = rs.getBoolean("status");
                    
                    if(status) {
                        list.add(new ProductDTO(id, name, description, price, size, status));
                    }                  
                }
            }
        } catch (Exception e) {
            e.getStackTrace();
        } finally {
            if (rs != null) {
                rs.close();
            }
            if (ptm != null) {
                ptm.close();
            }
            if (conn != null) {
                conn.close();
            }
        }
        return list;
    }


    public boolean delete(String id) throws SQLException {
       boolean check = false;
       Connection conn = null;
       PreparedStatement ptm = null;
       try {
            conn = DBUtils.getConnection();
            if(conn != null) {
                ptm = conn.prepareStatement(DELETE);
                ptm.setString(1, id);
                check = ptm.executeUpdate() > 0;
            }
       } catch(Exception e) {
           e.getStackTrace();
       } finally {
           if(ptm != null) ptm.close();
           if(conn != null) conn.close();
       }
       return false;
    }



// SEARCH SErvlet 
    

 private static final String ERROR = "product.jsp";
    private static final String SUCCESS = "product.jsp";

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        String url = ERROR;
        try {
            String search = request.getParameter("search");
            DAO dao = new DAO();
            List<ProductDTO> listProduct = dao.getListProduct(search);
            if(listProduct != null && listProduct.size() > 0) {
                request.setAttribute("LIST_PRODUCT", listProduct);
                url = SUCCESS;
            }
        } catch (Exception e) {
            log("Error at SearchController" + e.toString());
        } finally {
            request.getRequestDispatcher(url).forward(request, response);
        }
    }


// Product.jspp seacrh 2 bai 
<tbody>
    <% 
        List<CurrencyDTO> list = (List<CurrencyDTO>) request.getAttribute("LIST_Currency");
        if (list != null) {
            for (CurrencyDTO p : list) { 
    %>
                <tr>
                    <td><%= p.getCode() %></td>
                    <td><%= p.getName() %></td>
                    <td><%= p.getDescription() %></td>
                    <td><%= p.getRate() %></td>
                    <td>
                        <a href="MainController?action=Update&code=<%= p.getCode() %>"><button>Update</button> </a>
                    </td> 
                </tr>
    <% 
            }
        } 
    %>
</tbody>


bai 2

<body>
        <%
            UserDTO user = (UserDTO) session.getAttribute("LOGIN_USER");
            if (user == null || !user.getRoleID().equals("admin")) {
                response.sendRedirect("login.jsp");
                return;
            }
            List<FurnitureDTO> list = (List<FurnitureDTO>) request.getAttribute("LIST_FURNITURE");
            String search = request.getParameter("search");
            if (search == null) {
                search = "";
            }
        %>
        <h1>Welcome <%=user.getFullName()%></h1>       
        <form action="MainController">
            Search furniture by name: <input type="text" name="search"/>
            <input type="submit" name="action" value="Search"/>
            <input type="submit" name="action" value="Logout"/>            
        </form>

        <table border="1">
            <thead>
                <tr>
                    <th>No</th>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                    <th>Dimensions</th>
                    <th>Material</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                <%if (list != null) {
                        int count = 0;
                        for (FurnitureDTO p : list) {
                            count++;
                %>

                <tr>
                    <td><%=count%></td>
                    <td>
                        <%=p.getId()%>
                    </td>
                    <td>
                        <%=p.getName()%>
                    </td>
                    <td>
                        <%=p.getDescription()%>
                    </td>
                    <td>
                        <%=p.getPrice()%>
                    </td>
                    <td>
                        <%=p.getDimensions()%>
                    </td>
                    <td>
                        <%=p.getMaterial()%>
                    </td>
                    <td>
                        <%=p.isStatus()%>
                    </td>
                    <td>
                        <a href="MainController?action=Delete&search=<%=search%>&id=<%=p.getId()%>">Delete</a>
                    </td>
                </tr>
                <% }
                    }%>
            </tbody>
        </table>   
    </body>
//DAO update
           public boolean Update(String name, String description, Float rate, String code)
            throws SQLException, ClassNotFoundException {
        Connection con = null;
        PreparedStatement stm = null;
        try {
            con = DBUtils.getConnection();
            if (con != null) {
                String sql = "UPDATE tblCurrency SET name = ?, description  = ?, rate = ? WHERE code = ?";
                stm = con.prepareStatement(sql);
                stm.setString(1, name);
                stm.setString(2, description);
                stm.setFloat(3, rate);
                stm.setString(4, code);
                stm.executeUpdate();
                return true;
            }
        } finally {
            if (stm != null) {
                stm.close();
            }
            if (con != null) {
                con.close();
            }
        }
        return false;
    }

    public CurrencyDTO getObject(String code) throws ClassNotFoundException, SQLException {
    Connection con = null;
    PreparedStatement stm = null;
    ResultSet rs = null;
    try {
        con = DBUtils.getConnection();
        if (con != null) {
            String sql = "SELECT * FROM tblCurrency WHERE code = ?";
            stm = con.prepareStatement(sql);
            stm.setString(1, code);

            rs = stm.executeQuery();

            if (rs.next()) { 
                String name = rs.getString("name");
                String des = rs.getString("description");
                float rate = rs.getFloat("rate");
                return new CurrencyDTO(code, name, des, rate);
            } 
        }
    } finally {
        if (rs != null) {
            rs.close();
        }
        if (stm != null) {
            stm.close();
        }
        if (con != null) {
            con.close();
        }
    }
    return null; 
}




//update servlet

           private static final String ERROR = "SearchController";
    private static final String SUCCESS = "SearchController";

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        String url = ERROR;
        try {
            String code = request.getParameter("code");
            String name = request.getParameter("name");
            float rate = Float.parseFloat(request.getParameter("rate"));
            String description = request.getParameter("description");
            System.out.println(code);
            
            CurrencyDTO currency = new CurrencyDTO(code, name, description, rate);
            DAO dao = new DAO();
            boolean checkUpdate = dao.Update(name, description, rate, code);
            System.out.println(checkUpdate);
            if (checkUpdate) {
                request.setAttribute("MESS", "ok");
                url = SUCCESS;
            }
        } catch (Exception e) {
            log("Error at UpdateController: " + e.toString());
        } finally {
            request.getRequestDispatcher(url).forward(request, response);
        }
    }

//update jsp
 <h2>Update Currency Rate</h2>
    <% String code = request.getParameter("code");
    System.out.println(code);
        DAO dao = new DAO();
    CurrencyDTO a = dao.getObject(code); %>
    <form action="MainController" id="updateCurrencyForm">
        <label for="code">Code:</label>
        <input type="text" id="code" name="code" value="<%=code %>" required readonly>

        <label for="name">Name:</label>
        <input type="text" id="name" name="name" value="<%=a.getName()%>" required>

        <label for="description">Description:</label>
        <input type="text" id="description" name="description" value="<%=a.getDescription()%>" required>

        <label for="rate">Rate:</label>
        <input type="number" id="rate" name="rate" value="<%=a.getRate()%>" required>

        <input type="submit" name="action" value="Update" onclick="updateCurrency()">
    </form>



//DELETE servlet
 private static final String ERROR = "SearchController";
    private static final String SUCCESS = "SearchController";

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        String url = ERROR;
        try {
            String id = request.getParameter("id");
            DAO dao = new DAO();
            boolean check = dao.delete(id);
            if (check) {
                url = SUCCESS;
            }
        } catch (Exception e) {
            log("Error at DeleteController: " + e.toString());
        } finally {
            request.getRequestDispatcher(url).forward(request, response);
        }
    }