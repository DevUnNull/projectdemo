jsp
<%--  
    Document   : MyExam
    Created on : Mar 3, 2025, 8:23:17 PM
    Author     : Admin
--%>

<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %> <%-- Import thư viện JSTL Core để sử dụng các thẻ lặp, điều kiện, ... --%>
<%@page contentType="text/html" pageEncoding="UTF-8"%> <%-- Cấu hình mã hóa UTF-8 để hiển thị đúng tiếng Việt --%>

<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"> <%-- Định dạng charset UTF-8 cho trang web --%>
        <title>JSP Page</title>
    </head>
    <body>
        <%-- Form nhập ba số nguyên để tính toán LCM --%>
        <form action="bcnn" method="post"> <%-- Gửi dữ liệu đến servlet hoặc controller có URL mapping là "bcnn" --%>
            <table border="0">
                <tbody>
                    <tr>
                        <td>Enter integer number 1:</td>
                        <td><input type="text" name="a" value="${param.a}"></td> <%-- Ô nhập số nguyên thứ nhất, hiển thị lại giá trị nếu có --%>
                    </tr>
                    <tr>
                        <td>Enter integer number 2:</td>
                        <td><input type="text" name="b" value="${param.b}"></td> <%-- Ô nhập số nguyên thứ hai --%>
                    </tr>
                    <tr>
                        <td>Enter integer number 3:</td>
                        <td><input type="text" name="c" value="${param.c}"></td> <%-- Ô nhập số nguyên thứ ba --%>
                    </tr>
                    <tr>
                        <td><input type="submit" value="EXECUTE LCM"></td> <%-- Nút thực thi tính toán LCM --%>
                        <td style="font-weight: bold">${msg}</td> <%-- Hiển thị thông báo lỗi hoặc trạng thái nếu có --%>
                    </tr>
                    <tr>
                        <td>Result:</td>
                        <td><input type="text" value="${res}" name="result"></td> <%-- Hiển thị kết quả LCM sau khi tính --%>
                    </tr>
                </tbody>
            </table>
        </form>

        <%-- Bảng hiển thị lịch sử tính toán LCM --%>
        <table border="1" style="margin-top: 20px">
            <thead>
                <tr>
                    <th>Number 1</th>
                    <th>Number 2</th>
                    <th>Number 3</th>
                    <th>Result</th>
                </tr>
            </thead>
            <tbody>
                <%-- Duyệt danh sách kết quả lịch sử từ biến "list" và hiển thị từng dòng --%>
                <c:forEach items="${list}" var="o">
                    <tr>
                        <td>${o.a}</td> <%-- Hiển thị số nguyên thứ nhất --%>
                        <td>${o.b}</td> <%-- Hiển thị số nguyên thứ hai --%>
                        <td>${o.c}</td> <%-- Hiển thị số nguyên thứ ba --%>
                        <td>${o.result}</td> <%-- Hiển thị kết quả LCM --%>
                    </tr>
                </c:forEach>
            </tbody>
        </table>
    </body>
</html>

// java

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */

/**
 *
 * @author Admin
 */
public class Execute {

    private int a;
    private int b;
    private int c;
    private int result;

    public Execute() {
    }

    public Execute(int a, int b, int c, int result) {
        this.a = a;
        this.b = b;
        this.c = c;
        this.result = result;
    }

    public int getA() {
        return a;
    }

    public void setA(int a) {
        this.a = a;
    }

    public int getB() {
        return b;
    }

    public void setB(int b) {
        this.b = b;
    }

    public int getC() {
        return c;
    }

    public void setC(int c) {
        this.c = c;
    }

    public int getResult() {
        return result;
    }

    public void setResult(int result) {
        this.result = result;
    }
    

// servlet
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Servlet xử lý yêu cầu tính BCNN (Bội chung nhỏ nhất) từ form JSP
 * @author Admin
 */
public class bcnn extends HttpServlet {

    /**
     * Xử lý yêu cầu cho cả phương thức GET và POST
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8"); // Thiết lập kiểu nội dung UTF-8

        HttpSession session = request.getSession(); // Lấy session hiện tại

        // Lấy danh sách các lần thực thi trước đó từ session
        List<Execute> list = (List<Execute>) session.getAttribute("list");
        
        if (list == null) { // Nếu chưa có danh sách, khởi tạo mới
            list = new ArrayList<>();
        }
        
        // Lấy 3 số nguyên từ request
        int a = Integer.parseInt(request.getParameter("a"));
        int b = Integer.parseInt(request.getParameter("b"));
        int c = Integer.parseInt(request.getParameter("c"));

        // Kiểm tra xem đã từng tính toán với bộ số này chưa
        for (Execute execute : list) {
            if (execute.getA() == a && execute.getB() == b && execute.getC() == c) {
                request.setAttribute("msg", "Execution existed!"); // Thông báo nếu đã tồn tại
                request.getRequestDispatcher("MyExam.jsp").forward(request, response); // chạy về MyExam.jsp
                return;
            }
        }

        // Tính BCNN của hai số đầu tiên
        int r1 = LCM(a, b);
        
        // Tính BCNN với số thứ ba
        int res = LCM(r1, c);

        request.setAttribute("res", res); // Gán kết quả vào request
        list.add(new Execute(a, b, c, res)); // Lưu kết quả vào danh sách
        session.setAttribute("list", list); // Cập nhật danh sách vào session

        // Chuyển hướng về trang JSP để hiển thị kết quả
        request.getRequestDispatcher("MyExam.jsp").forward(request, response);
    }

    /**
     * Hàm tính BCNN của hai số nguyên dương
     */
    private int LCM(int a, int b) {
        int a1 = a, b1 = b;
        while (a != b) { // Lặp đến khi hai số bằng nhau
            if (a > b) {
                b = b + b1; // Tăng số nhỏ hơn lên
            } else {
                a = a + a1;
            }
        }
        return a; // Trả về BCNN
    }

    /**
     * Xử lý yêu cầu GET
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Xử lý yêu cầu POST
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Mô tả ngắn về servlet
     */
    @Override
    public String getServletInfo() {
        return "Servlet tính toán BCNN";
    }
}

    
}
